package com.fmscreenrecord.activity;

import com.fmscreenrecord.app.ExApplication;
import com.fmscreenrecord.fragment.LocalVideoFragment;
import com.fmscreenrecord.frontcamera.CameraView;
import com.fmscreenrecord.utils.MinUtil;
import com.fmscreenrecord.utils.RUtils;
import com.fmscreenrecord.utils.RecordVideo;
import com.fmscreenrecord.utils.StoreDirUtil;
import com.screeclibinvokehw.R;

import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.app.TabActivity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.Handler;
import android.text.Html;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.Window;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TabHost;

/**
 * 加载页面的activity
 * 
 * @author lin Creat:2015-01
 */
@SuppressLint("ResourceAsColor")
@SuppressWarnings("deprecation")
public class FMMainActivity extends TabActivity implements
		android.widget.CompoundButton.OnCheckedChangeListener, OnClickListener {
	private static TabHost tabHost;

	RadioButton radioButtonHome;

	static FrameLayout buttomLayout;

	static RadioGroup radioGroup;
	static RadioButton radioButtonVideo;
	static RadioButton radioButtonSetting;
	static RadioButton radioButtonFind;
	private static Context mContext;

	int main_tab_home = 0, main_tab_video = 1, main_tab_find = 2,
			main_tab_setting = 3;

	private static String home = "HOME";
	private static String video = "VIDEO";
	private static String setting = "SETTING";
	private static String login = "LOGIN";
	private static String hotvideo = "HOTVIDEO";

	private static String topthree = "TOPTHREE";

	private static LinearLayout delLayout;
	/** 删除按钮 */
	private static Button btnDel;
	/** 全选按钮 */
	public static Button btnSelAll;
	/** 保存到SD卡按钮 */
	public static Button moveToSDcard;
	/** 透明遮盖层 */
	static LinearLayout hintLinearlayout;

	static Intent intent1 = new Intent();
	static Intent intent2 = new Intent();
	static Intent intent3 = new Intent();
	static Intent intent4 = new Intent();
	static Intent intent5 = new Intent();
	static int height;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.fm_main);

		// 查找页面控件
		findviews();

		tabHost = this.getTabHost();
		mContext = this;

		intent1.setClass(this, MainActivity.class);
		intent2.setClass(this, VideoManager.class);
		intent3.setClass(this, WonderfulVideo.class);
		intent4.setClass(this, SettingActivity.class);
		intent5.setClass(this, TopThreeVideo.class);
		
		TabHost.TabSpec layout1spec = tabHost.newTabSpec(home);
		layout1spec.setIndicator(home);
		layout1spec.setContent(intent1);
		tabHost.addTab(layout1spec);

		TabHost.TabSpec spec2 = tabHost.newTabSpec(video);
		spec2.setIndicator(video);
		spec2.setContent(intent2);
		tabHost.addTab(spec2);

		TabHost.TabSpec spec3 = tabHost.newTabSpec(hotvideo);
		spec3.setIndicator(hotvideo);
		spec3.setContent(intent3);
		tabHost.addTab(spec3);

		TabHost.TabSpec spec4 = tabHost.newTabSpec(setting);
		spec4.setIndicator(setting);
		spec4.setContent(intent4);
		tabHost.addTab(spec4);
		
		TabHost.TabSpec spec5 = tabHost.newTabSpec(topthree);
		spec5.setIndicator(hotvideo);
		spec5.setContent(intent5);
		tabHost.addTab(spec5);

		// 判断是否打开欢迎引导界面
		isOpeanWelComeActivity();

		// 如果处于非录屏时间
		if (ExApplication.recStartTime == 0) {
			// 关闭触屏显示
			android.provider.Settings.System.putInt(
					mContext.getContentResolver(), "show_touches", 0);
			// 关闭水印
			// FloatView2.removeWater();
			// 关闭前置摄像头
			if (ExApplication.floatCameraClose == false) {
				CameraView.closeFloatView();

			}

		}

		// 友盟推送
//		PushAgent mPushAgent = PushAgent.getInstance(mContext);
//		mPushAgent.enable();
//		PushAgent.getInstance(mContext).onAppStart();
		// 获取设备的Device Token
		// String device_token = UmengRegistrar.getRegistrationId(mContext);
		// MinUtil.mylog("device_token:"+device_token);
	}

	@Override
	public void onWindowFocusChanged(boolean hasFocus) {
		super.onWindowFocusChanged(hasFocus);
		height = buttomLayout.getHeight();
		Rect frame = new Rect();
		getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);
		ExApplication.statusBarHeight = frame.top;
	}

	@SuppressWarnings("deprecation")
	protected void onResume() {

		super.onResume();
		if (ExApplication.isgotovideomange == true
				&& !RecordVideo.isRecordering) {
			ExApplication.isgotovideomange = false;

			// 刷新本地视频
			LocalVideoFragment.handler.sendEmptyMessage(4);
			// 跳转到视频管理页面
			handler.sendEmptyMessage(4);

		}

	}

	/**
	 * 查找控件
	 */
	@SuppressLint("NewApi")
	private void findviews() {
		buttomLayout = (FrameLayout) this.findViewById(R.id.buttom_layout);
		radioGroup = (RadioGroup) this.findViewById(R.id.main_tab_group);

		radioButtonHome = (RadioButton) findViewById(R.id.main_tab_home);
		radioButtonVideo = (RadioButton) findViewById(R.id.main_tab_video);
		radioButtonSetting = (RadioButton) findViewById(R.id.main_tab_setting);
		radioButtonFind = (RadioButton) findViewById(R.id.main_tab_find);

		delLayout = (LinearLayout) findViewById(R.id.main_tab_del);
		btnDel = (Button) findViewById(R.id.main_btn_del);

		btnSelAll = (Button) findViewById(R.id.main_btn_sel_all);

		moveToSDcard = (Button) findViewById(R.id.main_btn_save_to_sdcard);
		hintLinearlayout = (LinearLayout) findViewById(R.id.fm_main_hint_linearlayout2);

		radioButtonHome.setOnCheckedChangeListener(this);
		radioButtonVideo.setOnCheckedChangeListener(this);
		radioButtonSetting.setOnCheckedChangeListener(this);
		radioButtonFind.setOnCheckedChangeListener(this);
		btnDel.setOnClickListener(this);
		moveToSDcard.setOnClickListener(this);
		btnSelAll.setOnClickListener(this);
		hintLinearlayout.setOnTouchListener(new OnTouchListener() {

			@Override
			public boolean onTouch(View v, MotionEvent event) {
				// 将点击事件进行吞没，不传递到下一层
				return true;
			}
		});

		// 对按钮的背景图片边距进行设置
		Drawable[] drawable;
		drawable = radioButtonHome.getCompoundDrawables();
		Drawable[] drawable2 = radioButtonVideo.getCompoundDrawables();
		Drawable[] drawable3 = radioButtonSetting.getCompoundDrawables();
		int height1 = (int) (drawable[1].getIntrinsicHeight() / 2.1);
		int width1 = (int) (drawable[1].getIntrinsicWidth() / 1.8);
		int height2 = (int) (drawable2[1].getIntrinsicHeight() / 2.1);
		int width2 = (int) (drawable2[1].getIntrinsicWidth() / 1.8);
		int height3 = (int) (drawable3[1].getIntrinsicHeight() / 2.1);
		int width3 = (int) (drawable3[1].getIntrinsicWidth() / 1.8);
		drawable[1].setBounds(0, 0, height1, width1);
		drawable2[1].setBounds(0, 0, height2, width2);
		drawable3[1].setBounds(0, 0, height3, width3);
		radioButtonHome.setCompoundDrawables(null, drawable[1], null, null);
		radioButtonVideo.setCompoundDrawables(null, drawable2[1], null, null);
		radioButtonSetting.setCompoundDrawables(null, drawable3[1], null, null);
	}

	/** 判断是否打开欢迎引导页 */
	private void isOpeanWelComeActivity() {

		if (ExApplication.estimateVersion()) {

			Intent WelIntent = new Intent(FMMainActivity.this,
					WelcomeActivity.class);
			startActivity(WelIntent);
			finish();

		}
	}

	public static Handler handler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 1: // 登录成功，跳转到personal，来自LoginActivity
			{
				// 获得第三方登陆方式(QQ、微博、微信、短信)
				String channel = (String) msg.obj;

				MinUtil.upUmenEventValue(mContext, channel, "fmLoginSuccess");
				// 跳转到个人中心
				Intent intent = new Intent(mContext, PersonalActivity.class);
				mContext.startActivity(intent);

			}
				break;
			case 2: // 注销，跳转到LoginActivity
			{

				Intent intent = new Intent(mContext, LoginActivity.class);
				mContext.startActivity(intent);

				VideoManager.handler.sendEmptyMessage(15);
				// 清空云端视频数据信息
				VideoManager.handlerViewChange.sendEmptyMessage(19);
			}
				break;
			case 3: {
				tabHost.setCurrentTabByTag(login);
				VideoManager.handlerViewChange.sendEmptyMessage(1);

				radioButtonFind.performClick();
			}
				break;
			case 4:// 跳转到视屏页

				// 模拟点击视频页按钮
				radioButtonVideo.performClick();
				break;
			case 5: // 显示删除按钮
			{
				// TODO
				delLayout.setVisibility(View.VISIBLE);
				radioGroup.setVisibility(View.GONE);
				if (VideoManager.IN_WHITCH_PAGE == 1) {
					btnDel.setText(RUtils.getRString("fm_clear_record"));// 清除記錄
				} else {
					btnDel.setText(RUtils.getRString("delete"));// 刪除
				}
				// 如果是云端视频管理页，隐藏“保存到相册按钮”
				// if (VideoManager.IN_WHITCH_PAGE == 1) {
				// btnSaveToPhoto.setVisibility(View.GONE);
				// } else {
				// btnSaveToPhoto.setVisibility(View.VISIBLE);
				// }
			}
				break;
			case 6: // 隐藏删除编辑栏

			{
				radioGroup.setVisibility(View.VISIBLE);
				delLayout.setVisibility(View.GONE);

				btnSelAll.setText(RUtils.getRString("fm_home_page_select_all"));
			}
				break;
			case 7: {
				if (hintLinearlayout.getVisibility() == View.VISIBLE) {
					// 隐藏遮罩层
					Animation animation = AnimationUtils.loadAnimation(
							mContext, R.anim.zoom_exit);
					hintLinearlayout.startAnimation(animation);
					hintLinearlayout.setVisibility(View.GONE);
				} else {

					hintLinearlayout.setVisibility(View.VISIBLE);
				}

			}
				break;
			// 主页菜单栏的显示与关闭
			case 8: {
				buttomLayout.setVisibility(View.GONE);
			}
				break;
			case 9: {
				buttomLayout.setVisibility(View.VISIBLE);
			}
				break;

			case 13:
				// 跳到精彩视频
				tabHost.setCurrentTabByTag(hotvideo);
				// 模拟点击按钮
				radioButtonFind.performClick();
				break;
			case 14:

				// 跳到热门分类下的三个子分类
				tabHost.setCurrentTabByTag(topthree);
				// 模拟点击按钮
				radioButtonFind.performClick();
				break;
			}

		};
	};

	@Override
	public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {

		if (buttonView == radioButtonHome) {
			if (isChecked == true) {

				tabHost.setCurrentTabByTag(home);

			}
		} else if (buttonView == radioButtonVideo) {
			if (isChecked == true) {

				tabHost.setCurrentTabByTag(video);

			}
		} else if (buttonView == radioButtonSetting) {
			if (isChecked == true) {

				tabHost.setCurrentTabByTag(setting);

			}
		} else if (buttonView == radioButtonFind) {
			if (isChecked == true) {

				tabHost.setCurrentTabByTag(hotvideo);

			}

		}

	}

	@Override
	protected void onPause() {
		super.onPause();

	}

	@Override
	public void onClick(View v) {

		if (v == btnSelAll) {
			if (btnSelAll.getText().equals(
					RUtils.getRString("fm_home_page_select_all"))) {
				VideoManager.handlerViewChange.sendEmptyMessage(16);
				// 取消全选
				btnSelAll.setText(RUtils
						.getRString("fm_home_page_select_all_cancle"));
			} else {// 全選
				VideoManager.handlerViewChange.sendEmptyMessage(17);
				btnSelAll.setText(RUtils.getRString("fm_home_page_select_all"));
			}
		} else if (v == btnDel) {
			if (VideoManager.IN_WHITCH_PAGE == 0) {
				if (VideoManager.localVideoListCheckToDel.size() > 0) {
					dialogDelVideo(VideoManager.localVideoListCheckToDel.size());
				} else {
					MinUtil.showToast(getApplicationContext(),
							RUtils.getRString("select_video_of_delect"));
				}
			} else if (VideoManager.IN_WHITCH_PAGE == 1) {
				if (VideoManager.serverVideoListCheckToDel.size() > 0) {
					dialogDelVideo(VideoManager.serverVideoListCheckToDel
							.size());
				} else {
					MinUtil.showToast(getApplicationContext(),
							RUtils.getRString("select_video_of_delect"));

				}
			}

			else if (VideoManager.IN_WHITCH_PAGE == 2) {
				if (VideoManager.imageListCheckToDel.size() > 0) {
					dialogDelImage();
				} else {
					MinUtil.showToast(getApplicationContext(),
							RUtils.getRString("select_picture_of_delect"));
				}
			}

		} else if (v == moveToSDcard) {// 保存视频或图片到外置SD卡

			if (VideoManager.IN_WHITCH_PAGE == 0) {
				// 检查外置SD卡是否存在
				if (StoreDirUtil.getSDDEfault(getApplicationContext()) != null) {

					if (VideoManager.localVideoListCheckToDel.size() > 0) {

						VideoManager.handlerViewChange.sendEmptyMessage(9);
					} else {
						MinUtil.showToast(getApplicationContext(), RUtils
								.getRString("select_video_of_save_sdcard"));

					}

				} else {// 找不到SD卡
					MinUtil.showToast(getApplicationContext(),
							RUtils.getRString("cant_find_sdcard"));

				}
			}

			else if (VideoManager.IN_WHITCH_PAGE == 2) {
				// 检查外置SD卡是否存在
				if (StoreDirUtil.getPictureFile(getApplicationContext()) != null) {

					if (VideoManager.imageListCheckToDel.size() > 0) {

						VideoManager.handlerViewChange.sendEmptyMessage(9);
					} else {
						MinUtil.showToast(getApplicationContext(), RUtils
								.getRString("select_picture_of_save_sdcard"));
					}

				} else {
					MinUtil.showToast(getApplicationContext(),
							RUtils.getRString("cant_find_sdcard"));

				}
			}

		}
	}

	/**
	 * 删除视频对话框
	 * 
	 * @param size
	 */
	protected void dialogDelVideo(int size) {

		AlertDialog.Builder builder = new AlertDialog.Builder(mContext);
		builder.setTitle(Html.fromHtml(RUtils.getRString("fm_sure_delect")
				+ "<font color=\"#15b4eb\"> " + size + " </font>"
				+ RUtils.getRString("fm_video_nums")));
		builder.setPositiveButton(
				Html.fromHtml("<font color=\"#15b4eb\"> "
						+ RUtils.getRString("fm_sure") + " </font>"),
				new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog, int which) {

						delLayout.setVisibility(View.INVISIBLE);
						VideoManager.handlerViewChange.sendEmptyMessage(6);
						handler.sendEmptyMessage(6);

					}
				});
		builder.setNegativeButton(RUtils.getRString("fm_screenshot_cancel"),
				new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog, int which) {
					}
				});
		builder.create().show();

	}

	/**
	 * 删除图片对话框
	 */
	protected void dialogDelImage() {

		AlertDialog.Builder builder = new AlertDialog.Builder(mContext);
		builder.setTitle(Html.fromHtml(RUtils.getRString("fm_sure_delect")
				+ "<font color=\"#15b4eb\"> "
				+ VideoManager.imageListCheckToDel.size() + " </font> "
				+ RUtils.getRString("fm_picture_nums")));
		builder.setPositiveButton(
				Html.fromHtml("<font color=\"#15b4eb\"> "
						+ RUtils.getRString("fm_sure") + " </font>"),
				new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog, int which) {
						delLayout.setVisibility(View.INVISIBLE);
						ExApplication.firstIn = false;
						VideoManager.handlerViewChange.sendEmptyMessage(6);
						handler.sendEmptyMessage(6);
					}
				});
		builder.setNegativeButton(RUtils.getRString("fm_screenshot_cancel"),
				new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog, int which) {
					}
				});
		builder.create().show();

	}

}
